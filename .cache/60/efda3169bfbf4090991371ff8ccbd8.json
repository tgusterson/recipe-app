{"id":"../node_modules/state/lib/transition-expression.js","dependencies":[{"name":"E:\\Projects\\recipeapp\\package.json","includedInParent":true,"mtime":1573341583006},{"name":"E:\\Projects\\recipeapp\\node_modules\\state\\package.json","includedInParent":true,"mtime":1573341581729},{"name":"./state-function","loc":{"line":6,"column":18},"parent":"E:\\Projects\\recipeapp\\node_modules\\state\\lib\\transition-expression.js","resolved":"E:\\Projects\\recipeapp\\node_modules\\state\\lib\\state-function.js"}],"generated":{"js":"// Generated by CoffeeScript 1.6.3\n(function() {\n  var GUARD_ACTIONS, O, TRANSITION_EVENT_TYPES, TRANSITION_EXPRESSION_CATEGORIES, TRANSITION_PROPERTIES, TransitionExpression, state,\n    __hasProp = {}.hasOwnProperty;\n\n  state = require('./state-function');\n\n  O = state.O, TRANSITION_PROPERTIES = state.TRANSITION_PROPERTIES, TRANSITION_EXPRESSION_CATEGORIES = state.TRANSITION_EXPRESSION_CATEGORIES, TRANSITION_EVENT_TYPES = state.TRANSITION_EVENT_TYPES, GUARD_ACTIONS = state.GUARD_ACTIONS;\n\n  module.exports = TransitionExpression = (function() {\n    var assign, categories, clone, edit, eventTypes, guardActions, interpret, properties;\n\n    assign = O.assign, edit = O.edit, clone = O.clone;\n\n    properties = assign(TRANSITION_PROPERTIES, null);\n\n    categories = assign(TRANSITION_EXPRESSION_CATEGORIES, null);\n\n    eventTypes = assign(TRANSITION_EVENT_TYPES);\n\n    guardActions = assign(GUARD_ACTIONS);\n\n    function TransitionExpression(map) {\n      if (!(map instanceof TransitionExpression)) {\n        map = interpret(map);\n      }\n      edit('deep all', this, map);\n    }\n\n    interpret = function(map) {\n      var category, events, item, key, result, value, _ref;\n      result = assign({}, properties, categories);\n      for (key in map) {\n        if (!__hasProp.call(map, key)) continue;\n        value = map[key];\n        if (key in properties) {\n          result[key] = value;\n        } else if (key in categories) {\n          result[key] = clone(result[key], value);\n        } else {\n          category = key in eventTypes ? 'events' : key in guardActions ? 'guards' : typeof value === 'functions' ? 'methods' : void 0;\n          if (category) {\n            item = result[category];\n            item || (item = result[category] = {});\n            item[key] = value;\n          }\n        }\n      }\n      _ref = events = result.events;\n      for (key in _ref) {\n        value = _ref[key];\n        if (typeof value === 'function') {\n          events[key] = [value];\n        }\n      }\n      return result;\n    };\n\n    return TransitionExpression;\n\n  })();\n\n}).call(this);\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/state/lib/transition-expression.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/state/lib/transition-expression.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/state/lib/transition-expression.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/state/lib/transition-expression.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/state/lib/transition-expression.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/state/lib/transition-expression.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/state/lib/transition-expression.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/state/lib/transition-expression.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/state/lib/transition-expression.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/state/lib/transition-expression.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/state/lib/transition-expression.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/state/lib/transition-expression.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/state/lib/transition-expression.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/state/lib/transition-expression.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/state/lib/transition-expression.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/state/lib/transition-expression.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/state/lib/transition-expression.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/state/lib/transition-expression.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/state/lib/transition-expression.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/state/lib/transition-expression.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/state/lib/transition-expression.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/state/lib/transition-expression.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/state/lib/transition-expression.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/state/lib/transition-expression.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/state/lib/transition-expression.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/state/lib/transition-expression.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/state/lib/transition-expression.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/state/lib/transition-expression.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/state/lib/transition-expression.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/state/lib/transition-expression.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/state/lib/transition-expression.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/state/lib/transition-expression.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/state/lib/transition-expression.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/state/lib/transition-expression.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/state/lib/transition-expression.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/state/lib/transition-expression.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/state/lib/transition-expression.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/state/lib/transition-expression.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/state/lib/transition-expression.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/state/lib/transition-expression.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/state/lib/transition-expression.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/state/lib/transition-expression.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/state/lib/transition-expression.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/state/lib/transition-expression.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/state/lib/transition-expression.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/state/lib/transition-expression.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/state/lib/transition-expression.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/state/lib/transition-expression.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/state/lib/transition-expression.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/state/lib/transition-expression.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/state/lib/transition-expression.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/state/lib/transition-expression.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/state/lib/transition-expression.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/state/lib/transition-expression.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/state/lib/transition-expression.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/state/lib/transition-expression.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/state/lib/transition-expression.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/state/lib/transition-expression.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/state/lib/transition-expression.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/state/lib/transition-expression.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/state/lib/transition-expression.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/state/lib/transition-expression.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/state/lib/transition-expression.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/state/lib/transition-expression.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}}],"sources":{"../node_modules/state/lib/transition-expression.js":"// Generated by CoffeeScript 1.6.3\n(function() {\n  var GUARD_ACTIONS, O, TRANSITION_EVENT_TYPES, TRANSITION_EXPRESSION_CATEGORIES, TRANSITION_PROPERTIES, TransitionExpression, state,\n    __hasProp = {}.hasOwnProperty;\n\n  state = require('./state-function');\n\n  O = state.O, TRANSITION_PROPERTIES = state.TRANSITION_PROPERTIES, TRANSITION_EXPRESSION_CATEGORIES = state.TRANSITION_EXPRESSION_CATEGORIES, TRANSITION_EVENT_TYPES = state.TRANSITION_EVENT_TYPES, GUARD_ACTIONS = state.GUARD_ACTIONS;\n\n  module.exports = TransitionExpression = (function() {\n    var assign, categories, clone, edit, eventTypes, guardActions, interpret, properties;\n\n    assign = O.assign, edit = O.edit, clone = O.clone;\n\n    properties = assign(TRANSITION_PROPERTIES, null);\n\n    categories = assign(TRANSITION_EXPRESSION_CATEGORIES, null);\n\n    eventTypes = assign(TRANSITION_EVENT_TYPES);\n\n    guardActions = assign(GUARD_ACTIONS);\n\n    function TransitionExpression(map) {\n      if (!(map instanceof TransitionExpression)) {\n        map = interpret(map);\n      }\n      edit('deep all', this, map);\n    }\n\n    interpret = function(map) {\n      var category, events, item, key, result, value, _ref;\n      result = assign({}, properties, categories);\n      for (key in map) {\n        if (!__hasProp.call(map, key)) continue;\n        value = map[key];\n        if (key in properties) {\n          result[key] = value;\n        } else if (key in categories) {\n          result[key] = clone(result[key], value);\n        } else {\n          category = key in eventTypes ? 'events' : key in guardActions ? 'guards' : typeof value === 'functions' ? 'methods' : void 0;\n          if (category) {\n            item = result[category];\n            item || (item = result[category] = {});\n            item[key] = value;\n          }\n        }\n      }\n      _ref = events = result.events;\n      for (key in _ref) {\n        value = _ref[key];\n        if (typeof value === 'function') {\n          events[key] = [value];\n        }\n      }\n      return result;\n    };\n\n    return TransitionExpression;\n\n  })();\n\n}).call(this);\n"},"lineCount":64}},"error":null,"hash":"8545748c0751e73f54192bd7372ed459","cacheData":{"env":{}}}